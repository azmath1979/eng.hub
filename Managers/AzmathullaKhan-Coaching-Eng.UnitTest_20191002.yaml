manager: Azmathulla Khan
teamroom: Eng.UnitTest
direct reports: 8
ICs: 
    - IC: 
        IC name: Pranati Jaiswal
        date: 2019-10-02
        unit: https://jira.devfactory.com/browse/TBGTM-6775
        coaching: Guided IC with this reference PR 1097 of avolin tradebeam to have consistent and uniform formatting, consider using the IDE formatting capabilities before committing the code. Also test prefix is specific to JUnit 3, while Test is specific to JUnit 4 and deprecates the former. It could be a good approach to remove this prefix and avoid redundancy. It is recommended to follow the Java naming conventions for method's names and remove the underscore characters. For test methods, the underscores can be replaced with BDD format (Given, When, Then).
        performance assessment: averagePerformer
        continue coaching: true
    - IC: 
        IC name: Mayur Patel
        date: 2019-10-02
        unit: https://jira.devfactory.com/browse/TBGTM-6449
        coaching: This code is using the class field name sourceReference in a local scope. Shadowing fields with a local variable or a method parameter should be avoided because this reduces code readability. t is confusing to determine whether the field or the variable is being used. Consider renaming the local variable.Solution is final ComplianceScreeningSourceReference sourceReferenceLocal and guided to refer confluence file on local variable or parameter shadowing class field.
        performance assessment: averagePerformer
        continue coaching: true
    - IC: 
        IC name: Deepali Kathotia
        date: 2019-10-02
        unit: https://jira.devfactory.com/browse/TBGTM-6536
        coaching: IC is guided how to improve the logic in CompliancescreeningAdapterGroupedGetStatusTest java file and in particularly the correct usage of ComplianceScreeningStatus, ChecklistScreeningStatus, newarraylist in reference PR 1103 of avoilin tradebeam.
        performance assessment: averagePerformer
        continue coaching: true
    - IC: 
        IC name: Moho Anayetul Samaun
        date: 2019-10-02
        unit: https://jira.devfactory.com/browse/OLIVES-13729
        coaching: In our cic review further guided on missing Jenkins Code coverage and fixes in the reference PR 28 of Olive.
        performance assessment: averagePerformer
        continue coaching: true
    - IC: 
        IC name: Amrulla Khan
        date: 2019-10-02
        unit: https://jira.devfactory.com/browse/PIVOTAL-8458
        coaching: In cic review found that the Jenkins build is failing and relevant fixes revisited in the reference PR 25 of Pivotal.
        performance assessment: averagePerformer
        continue coaching: true
    - IC: 
        IC name: Waleed Mohsin
        date: 2019-10-02
        unit: https://jira.devfactory.com/browse/PIVOTAL-6308
        coaching: This specific issue was further deep dived together and found in long classes of 1K plus LOCs generated by UTGenerator there were unused variables leftover & this was a manual error as had to locate manually by IC. To mitigate this have suggested to use Resharper license and arranging to procure one for the IC. 
        performance assessment: highPerformer
        continue coaching: true
    - IC: 
        IC name: Sibhani Sankar Pradhan
        date: 2019-10-02
        unit: https://jira.devfactory.com/browse/TBGTM-6108
        coaching: In review found that the method Can Be Marked as Static.  Since this method is not using any instance variable, it could be a good idea to mark it as static as well. Static methods are ok when they are functions, i.e. they don't do any I/O, don't have any internal state and only use their parameters to compute their return value. This way the code can call this method even if no object was created yet. Other advantages are listed at the link below. Improvement suggestion in this case is private static Set <String> getScreeningFields
        performance assessment: averagePerformer
        continue coaching: true
    - IC: 
        IC name: Kerem Demirer
        date: 2019-10-02
        unit: https://jira.devfactory.com/browse/KMECN-28238
        coaching: In review found that this code contains one or more redundant blank lines. Guided IC to consider removing unnecessary blank lines, using a single blank line for delimiting code constructs or sections.
        performance assessment: highPerformer
        continue coaching: true		
